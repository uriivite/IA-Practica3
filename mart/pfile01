(define (problem roverprob1) (:domain Mart)
	(:objects
		rover0 rover1 - rover
		base0 - base
		assentament0 assentament1 assentament2 - assentament
		persona0 persona1 - persona
		suministre0 suministre1 - suministre
		)
	(:init
		(= (coste-total-combustible) 0)
		(= (comb_restant rover0) 5)
		(= (comb_restant rover1) 5)
		(= (comb_inicial) 5)
		(aparcat rover0 base0)
		(rover_buit rover0)
		(aparcat rover1 base0)
		(rover_buit rover1)
		(l_persona persona0 assentament0)
		(l_persona persona1 assentament1)
		(l_sum suministre0 assentament2)
		(peticio_s suministre0 assentament1)
		(peticio_p persona0 assentament2)
		(peticio_p persona1 assentament0)
	)
	(:goal
		(and (forall (?p - persona)
			deixo_p ?p) (forall (?s - suministre)
			deixo_s ?s) )
	)
	(:metric minimize (coste-total-combustible) )
)
