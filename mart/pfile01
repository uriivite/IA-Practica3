(define (problem roverprob1) (:domain Mart)
	(:objects
		rover0 rover1 - rover
		base0 - base
		assentament0 assentament1 assentament2 - assentament
		persona0 persona1 - persona
		suministre0 - suministre
		combustible0 - combustible
		)
	(:init
		(= (funcion1 combustible0) 3)
		(= (coste-total) 0)
		;(= (coste-total) 2)
		(aparcat rover0 base0)
		(rover_buit rover0)
		(aparcat rover1 base0)
		(rover_buit rover1)
		(l_persona persona0 assentament0)
		(l_persona persona1 assentament1)
		(l_sum suministre0 assentament2)
		(peticio_s suministre0 assentament1)
		(peticio_p persona0 assentament2)
		(peticio_p persona1 assentament0)
	)
	(:goal
		(and (deixo_p persona0 assentament2)
		(deixo_p persona1 assentament0)
		(deixo_s suministre0 assentament1))
	)
	(:metric minimize(coste-total))
)
