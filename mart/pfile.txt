(define (problem roverprob1) (:domain Mart)
(:objects
rover0 rover1 rover2 rover3 rover4 rover5 rover6 rover7 rover8 rover9 - rover
base0 base1 base2 base3 - base
assentament0 assentament1 assentament2 assentament3 assentament4 assentament5 assentament6 assentament7 assentament8 assentament9 assentament10 assentament11 assentament12 assentament13 - assentament
persona0 - persona
suministre0 suministre1 suministre2 suministre3 - suministre

)
(:init
(= (coste-total-combustible) 0)
 (= (comb_inicial) 5)
(= (fuel-level rover0) 5)
(= (fuel-level rover1) 5)
(= (fuel-level rover2) 5)
(= (fuel-level rover3) 5)
(= (fuel-level rover4) 5)
(= (fuel-level rover5) 5)
(= (fuel-level rover6) 5)
(= (fuel-level rover7) 5)
(= (fuel-level rover8) 5)
(= (fuel-level rover9) 5)
(aparcat rover0 base0)
(rover_buit rover0)
(aparcat rover1 base1)
(rover_buit rover1)
(aparcat rover2 base1)
(rover_buit rover2)
(aparcat rover3 base2)
(rover_buit rover3)
(aparcat rover4 base0)
(rover_buit rover4)
(aparcat rover5 base2)
(rover_buit rover5)
(aparcat rover6 base1)
(rover_buit rover6)
(aparcat rover7 base1)
(rover_buit rover7)
(aparcat rover8 base3)
(rover_buit rover8)
(aparcat rover9 base1)
(rover_buit rover9)
(l_persona persona0 assentament4)
(l_sum suministre0 assentament11)
(l_sum suministre1 assentament2)
(l_sum suministre2 assentament3)
(l_sum suministre3 assentament5)
(peticio_p persona0 assentament9)
(peticio_s suministre0 assentament11)
(peticio_s suministre1 assentament3)
(peticio_s suministre2 assentament10)
(peticio_s suministre3 assentament9)

)
(:goal
(and(deixo_p persona0)
(deixo_s suministre0)
(deixo_s suministre1)
(deixo_s suministre2)
(deixo_s suministre3)
)
)
(:metric minimize(coste-total))
)
